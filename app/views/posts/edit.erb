<h3 class="edit-title"> Edit Post </h3>

<form action="/posts/<%= @post.slug %>" method="POST" id="post-form">
  <div >
    <input name="post[title]" type="text" placeholder="My New Post" required="true" value="<%= @post.title %>" />
  </div>

  <div id="editor-toolbar">
    <span onclick="execCmd('bold');">B</span>
    <span onclick="execCmd('italic');">I</span>
    <span onclick="execCmd('underline');">U</span>
    <span onclick="execCmd('strikethrough');">S</span>
    <span onclick="execCmd('justifyLeft');">Left</span>
    <span onclick="execCmd('justifyCenter');">Center</span>
    <span onclick="execCmd('justifyRight');">Right</span>
    <span onclick="createLink();">Link</span>
    <span onclick="createFootnote();">Footnote</span>
  </div>

  <iframe
    id="richTextEditor"
    name="richTextField"
    srcdoc="<%= @post.body %>">
  </iframe>

  <input id='hidden-post-body-input' name="post[body]" style='display:none;'/>

  <input type="submit" value="Submit" />
</form>

<script >
 richTextField.document.designMode = 'On';

 function enableEditMode(){
   console.log('enableEditMode');
   richTextField.document.designMode = 'On';
 }

 function execCmd(command) {
   console.log('execCmd', command);
   richTextField.document.execCommand(command, false, null);
 }

 function createLink() {
  const url = prompt('Enter a Url', 'http://');
  const title = prompt('Enter a title', '');
  const selection = richTextField.document.getSelection();

  const a = document.createElement('a');
  a.href = url;
  a.title = title;
  window.getSelection().getRangeAt(0).surroundContents(a);
  richTextField.document.execCommand('insertHTML', false, '<a href="' + url + '" target="_blank">' + title + '</a>');
 }

  function createFootnote(){
    console.log('createFootnote');
    let content = richTextField
    console.log('content', content);

    if (content.document.getElementById('footnotes')) {
      console.log('add to foot notes');
      addNewFootnote();
    } else {
      console.log('creating footnotes');

      // add footnotes container
      let footnotes = content.document.createElement('div');
      footnotes.setAttribute('id', 'footnotes');
      let lines = content.document.createElement('p');
      lines.textContent = "---";
      footnotes.appendChild(lines);
      content.document.querySelector('body').appendChild(footnotes);

      addNewFootnote();
    }
  }

  function addNewFootnote(){
    const footnotes = richTextField.document.querySelectorAll('.footnote');
    const thisCount = footnotes.length + 1;

    // link
    const id = `footnote-${thisCount}`;
    const linkText = `[${thisCount}]`
    richTextField.document.execCommand('insertHTML', false, `<a href='#${id}'>${linkText}</a>`);

    // footnote
    const footnote = richTextField.document.createElement('p');
    footnote.setAttribute('id', id);
    footnote.classList.add('footnote');
    footnote.innerHTML = prompt('Information for footnote', linkText);
    richTextField.document.getElementById('footnotes').appendChild(footnote);
  }

 function execCmdWithArg(command, arg) {
   console.log('execCmdWithArg', command);
   richTextField.document.execCommand(command, false, arg);
 }
</script>
